{"version":3,"sources":["component/LargeTimer.js","component/Schedule.js","component/SetupSchedulePeriodItem.js","component/SetupSchedule.js","component/App.js","index.js"],"names":["useStyles","makeStyles","largeTimer","textAlign","padding","descText","marginTop","LargeTimer","props","period","classes","schedule","i","length","periodObj","currentTime","start","end","timeLength","timeLeft","percentage","Container","maxWidth","Paper","className","elevation","Typography","variant","component","Math","floor","slice","LinearProgress","value","mb","Chip","label","name","scheduleContainer","Schedule","useState","showBreaks","setShowBreaks","hourFormat24","setHourFormat24","scheduleJsx","filter","e","isBreak","map","TableRow","key","id","selected","TableCell","align","secsToTime24","secsToTime","FormControlLabel","control","Switch","checked","onChange","TableContainer","Table","TableHead","TableBody","seconds","hrs","am","getDateFromSeconds","date","Date","hours","setHours","dateToSeconds","getSeconds","getMinutes","getHours","SetupSchedulePeriodItem","index","setName","setStart","setEnd","endError","setEndError","setIsBreak","useEffect","doUpdate","startSeconds","endSeconds","update","ListItem","TextField","target","utils","DateFnsUtils","TimePicker","error","FormControl","style","minWidth","InputLabel","Select","MenuItem","SetupSchedule","schedulePeriodItems","setSchedulePeriodItems","scheduleData","setScheduleData","dialogOpen","setDialogOpen","Dialog","open","aria-labelledby","DialogTitle","DialogContent","DialogContentText","List","IconButton","color","onClick","data","present","Object","values","Button","onScheduleSet","App","getCurrentTimeSeconds","setCurrentTime","undefined","setSchedule","setInterval","localStorage","JSON","parse","paddingTop","stringify","d","time","rootElement","document","getElementById","darkTheme","createMuiTheme","palette","type","ReactDOM","render","ThemeProvider","theme"],"mappings":"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","file":"static/js/main.e1eb4f57.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  largeTimer: {\n    textAlign: \"center\",\n    padding: 20\n  },\n  descText: {\n    marginTop: 10\n  }\n});\n\nexport default function LargeTimer(props) {\n  const classes = useStyles();\n  let period;\n\n  if (!props.schedule) {\n    return null;\n  }\n\n  for (let i = 0; i < props.schedule.length; i++) {\n    let periodObj = props.schedule[i];\n\n    if (\n      props.currentTime >= periodObj.start &&\n      props.currentTime < periodObj.end\n    ) {\n      period = periodObj;\n      break;\n    }\n  }\n\n  if (period) {\n    let timeLength = period.end - period.start;\n    let timeLeft = period.end - props.currentTime;\n\n    let percentage = 100 - (timeLeft / timeLength) * 100;\n    return (\n      <Container maxWidth=\"md\">\n        <Paper className={classes.largeTimer} elevation={2}>\n          <Typography variant=\"h1\" component=\"h2\">\n            {(\"00\" + Math.floor(timeLeft / 60)).slice(-2) +\n              \":\" +\n              (\"00\" + (timeLeft % 60)).slice(-2)}\n          </Typography>\n          <LinearProgress variant=\"determinate\" value={percentage} mb={1} />\n          <Chip\n            className={classes.descText}\n            label={<Typography>{period.name}</Typography>}\n          />\n        </Paper>\n      </Container>\n    );\n  } else {\n    return (\n      <Container maxWidth=\"md\">\n        <Paper className={classes.largeTimer} elevation={2}>\n          <Chip\n            className={classes.descText}\n            label={<Typography>School is not in session</Typography>}\n          />\n        </Paper>\n      </Container>\n    );\n  }\n}\n","import React, { useState } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  scheduleContainer: {\r\n    padding: 10,\r\n    marginTop: 15\r\n  }\r\n});\r\n\r\nexport default function Schedule(props) {\r\n  const [showBreaks, setShowBreaks] = useState(false);\r\n  const [hourFormat24, setHourFormat24] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  if (!props.schedule) {\r\n    return null;\r\n  }\r\n\r\n  const scheduleJsx = props.schedule\r\n    .filter((e) => {\r\n      if (!showBreaks) {\r\n        return !e.isBreak;\r\n      } else {\r\n        return true;\r\n      }\r\n    })\r\n    .map((e) => (\r\n      <TableRow\r\n        key={e.id}\r\n        selected={props.currentTime >= e.start && props.currentTime < e.end}\r\n      >\r\n        <TableCell>{e.name}</TableCell>\r\n        <TableCell align=\"right\">{secsToTime24(e.end - e.start)}</TableCell>\r\n        <TableCell align=\"right\">\r\n          {hourFormat24 ? secsToTime24(e.start) : secsToTime(e.start)}\r\n        </TableCell>\r\n        <TableCell align=\"right\">\r\n          {hourFormat24 ? secsToTime24(e.end) : secsToTime(e.end)}\r\n        </TableCell>\r\n      </TableRow>\r\n    ));\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Paper className={classes.scheduleContainer} elevation={1}>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={showBreaks}\r\n              onChange={() => setShowBreaks(!showBreaks)}\r\n            />\r\n          }\r\n          label=\"Show breaks\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={hourFormat24}\r\n              onChange={() => setHourFormat24(!hourFormat24)}\r\n            />\r\n          }\r\n          label=\"24 Hour Format\"\r\n        />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"right\">Duration</TableCell>\r\n                <TableCell align=\"right\">Start</TableCell>\r\n                <TableCell align=\"right\">End</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{scheduleJsx}</TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction secsToTime(seconds) {\r\n  let hrs = Math.floor(seconds / 3600);\r\n  seconds %= 3600;\r\n  let mins = (\"00\" + Math.floor(seconds / 60)).slice(-2);\r\n  let am = true;\r\n\r\n  if (hrs > 12) {\r\n    am = false;\r\n    hrs -= 12;\r\n  }\r\n\r\n  return hrs + \":\" + mins + \" \" + (am ? \"AM\" : \"PM\");\r\n}\r\n\r\nfunction secsToTime24(seconds) {\r\n  let hrs = Math.floor(seconds / 3600);\r\n  seconds %= 3600;\r\n  let mins = (\"00\" + Math.floor(seconds / 60)).slice(-2);\r\n\r\n  return hrs + \":\" + mins;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { MuiPickersUtilsProvider, TimePicker } from \"@material-ui/pickers\";\r\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"date-fns\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { endOfDay, endOfDecade } from \"date-fns\";\r\n\r\nfunction getDateFromSeconds(seconds) {\r\n  let date = new Date();\r\n  let hours = Math.floor(seconds / 3600);\r\n  seconds -= hours * 3600;\r\n  date.setHours(hours, Math.floor(seconds / 60), seconds % 60, 0)\r\n  return date;\r\n}\r\n\r\nfunction dateToSeconds(date) {\r\n  return date.getSeconds() + date.getMinutes() * 60 + date.getHours() * 3600;\r\n}\r\n\r\nexport default function SetupSchedulePeriodItem(props) {\r\n  const [name, setName] = useState(\"Period \" + (props.index + 1));\r\n  const [start, setStart] = useState(props.start ? getDateFromSeconds(props.start) : new Date());\r\n  const [end, setEnd] = useState(props.start ? getDateFromSeconds(props.start) : new Date());\r\n  const [endError, setEndError] = useState();\r\n  const [isBreak, setIsBreak] = useState(false);\r\n\r\n  function update() {\r\n    let startSeconds = dateToSeconds(start);\r\n      \r\n    let endSeconds = dateToSeconds(end);\r\n\r\n    return {\r\n      id: props.index,\r\n      name: name,\r\n      start: startSeconds,\r\n      end: endSeconds,\r\n      isBreak: isBreak\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.doUpdate(update());\r\n  });\r\n\r\n  return (\r\n    <ListItem>\r\n      <TextField\r\n        label=\"Period Name\"\r\n        onChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n        value={name}\r\n      />\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <TimePicker\r\n          label=\"Start Time\"\r\n          onChange={(e) => {\r\n            setStart(e);\r\n          }}\r\n          value={start}\r\n        />\r\n        <TimePicker\r\n          error={endError}\r\n          label=\"End Time\"\r\n          onChange={(e) => {\r\n            if(dateToSeconds(e) >= dateToSeconds(start)) {\r\n              setEndError(false);\r\n              setEnd(e);\r\n            } else \r\n                setEndError(true);\r\n          }}\r\n          value={end}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n      <FormControl style={{ minWidth: 70 }}>\r\n        <InputLabel>Type</InputLabel>\r\n        <Select\r\n          value={isBreak}\r\n          onChange={(e) => {\r\n            setIsBreak(e.target.value);\r\n          }}\r\n        >\r\n          <MenuItem value={false}>Class</MenuItem>\r\n          <MenuItem value={true}>Break</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </ListItem>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport SetupSchedulePeriodItem from \"./SetupSchedulePeriodItem\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function SetupSchedule(props) {\r\n  const [schedulePeriodItems, setSchedulePeriodItems] = useState([]);\r\n  const [scheduleData, setScheduleData] = useState({});\r\n  const [dialogOpen, setDialogOpen] = useState(true);\r\n\r\n  return (\r\n    <Dialog open={dialogOpen} aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\">Setup Schedule</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          To begin using this app, first enter the starting and ending times for\r\n          each period of your school schedule.\r\n        </DialogContentText>\r\n        <List>{schedulePeriodItems}</List>\r\n        <IconButton\r\n          color=\"primary\"\r\n          component=\"span\"\r\n          onClick={() => {\r\n            let id = schedulePeriodItems.length;\r\n            setSchedulePeriodItems([\r\n              ...schedulePeriodItems,\r\n              <SetupSchedulePeriodItem\r\n                key={id}\r\n                index={schedulePeriodItems.length}\r\n                doUpdate={(data) => {\r\n                  setScheduleData((present) => {\r\n                    present[data.id] = data;\r\n                    return present;\r\n                  });\r\n                }}\r\n                start={Object.values(scheduleData).slice(-1)[0] ? Object.values(scheduleData).slice(-1)[0].end : null}\r\n              />\r\n            ]);\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"primary\"\r\n          component=\"span\"\r\n          onClick={() => {\r\n            setSchedulePeriodItems(\r\n              schedulePeriodItems.slice(0, schedulePeriodItems.length - 1)\r\n            );\r\n          }}\r\n        >\r\n          <RemoveIcon />\r\n        </IconButton>\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            props.onScheduleSet(Object.values(scheduleData));\r\n            setDialogOpen(false);\r\n          }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport LargeTimer from \"./LargeTimer\";\r\nimport Schedule from \"./Schedule\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport SetupSchedule from \"./SetupSchedule\";\r\n\r\nexport default function App() {\r\n  const [currentTime, setCurrentTime] = useState(getCurrentTimeSeconds());\r\n  const [schedule, setSchedule] = useState(undefined);\r\n\r\n  setInterval(() => {\r\n    setCurrentTime(getCurrentTimeSeconds());\r\n  }, 1000);\r\n\r\n  if(localStorage.schedule) {\r\n    let schedule = JSON.parse(localStorage.schedule);\r\n    return (\r\n      <Container style={{ paddingTop: 20 }}>\r\n        <LargeTimer currentTime={currentTime} schedule={schedule} />\r\n        <Schedule currentTime={currentTime} schedule={schedule} />\r\n      </Container>\r\n    );\r\n  } \r\n\r\n  return (\r\n    <Container style={{ paddingTop: 20 }}>\r\n      <SetupSchedule\r\n        onScheduleSet={(schedule) => {\r\n          localStorage.schedule = JSON.stringify(schedule);\r\n          setSchedule(schedule);\r\n        }}\r\n      />\r\n      <LargeTimer currentTime={currentTime} schedule={schedule} />\r\n      <Schedule currentTime={currentTime} schedule={schedule} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction getCurrentTimeSeconds() {\r\n  let d = new Date();\r\n  let time = d.getSeconds();\r\n  time += d.getMinutes() * 60;\r\n  time += d.getHours() * 3600;\r\n\r\n  return time;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport App from \"./component/App\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst rootElement = document.getElementById(\"root\");\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"light\"\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={darkTheme}>\n    <App />\n  </ThemeProvider>,\n  rootElement\n);\n"],"sourceRoot":""}